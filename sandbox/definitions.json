[
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": false
        },
        "type": "type",
        "data": {
            "type": "ObjectTypeDefinition"
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": true,
        "instances": [
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "FieldDefinition",
                    "for": [
                        "InterfaceTypeDefinition",
                        "ObjectTypeDefinition"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                }
            },
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "UnionMemberDefinition",
                    "for": [
                        "UnionTypeDefinition"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                }
            },
            {
                "options": [
                    {
                        "name": "query",
                        "help": "This is your endpoint where you serve your data out of your server."
                    },
                    {
                        "name": "mutation",
                        "help": "Mutation is the same as query but here you also mutate data in your database"
                    },
                    {
                        "name": "subscription",
                        "help": "Subscribe to some real-time event in your database"
                    }
                ],
                "data": {
                    "type": "ObjectTypeExtension",
                    "for": [
                        "Extend"
                    ]
                },
                "node": {
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": true
                },
                "root": false
            }
        ],
        "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": false
        },
        "type": "input",
        "data": {
            "type": "InputObjectTypeDefinition"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": true,
        "instances": [
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "InputValueDefinition",
                    "for": [
                        "InputObjectTypeDefinition",
                        "FieldDefinition",
                        "DirectiveDefinition",
                        "ObjectValue"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                },
                "instances": [
                    {
                        "node": {
                            "notEditable": true
                        },
                        "data": {
                            "type": "Argument"
                        },
                        "options": [
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "type": "InputObjectTypeExtension",
                    "for": [
                        "Extend"
                    ]
                },
                "node": {
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": true
                },
                "root": false
            }
        ],
        "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": false
        },
        "type": "union",
        "data": {
            "type": "UnionTypeDefinition"
        },
        "help": "Union is a field which says this is type A, type B or type C. Union nodes can have only type instance inputs",
        "root": true,
        "instances": [
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "FieldDefinition",
                    "for": [
                        "InterfaceTypeDefinition",
                        "ObjectTypeDefinition"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                }
            },
            {
                "data": {
                    "type": "UnionTypeExtension",
                    "for": [
                        "Extend"
                    ]
                },
                "node": {
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": true
                },
                "root": false
            }
        ],
        "id": "779c5a70-c0a9-4129-901f-7dd09c7b0c4a"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": false
        },
        "type": "enum",
        "data": {
            "type": "EnumTypeDefinition"
        },
        "help": "Enumeration types are a special kind of scalar that is restricted to a particular set of allowed string values",
        "root": true,
        "instances": [
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "FieldDefinition",
                    "for": [
                        "InterfaceTypeDefinition",
                        "ObjectTypeDefinition"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                }
            },
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "InputValueDefinition",
                    "for": [
                        "InputObjectTypeDefinition",
                        "FieldDefinition",
                        "DirectiveDefinition",
                        "ObjectValue"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                },
                "help": "Value of Enum",
                "instances": [
                    {
                        "node": {
                            "notEditable": true
                        },
                        "data": {
                            "type": "Argument"
                        },
                        "options": [
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "type": "EnumTypeExtension",
                    "for": [
                        "Extend"
                    ]
                },
                "node": {
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": true
                },
                "root": false
            }
        ],
        "id": "6a14a425-4d25-4e42-bfc0-83d66662a621"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": false
        },
        "type": "scalar",
        "data": {
            "type": "ScalarTypeDefinition"
        },
        "help": "Custom scalar type",
        "root": true,
        "instances": [
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "FieldDefinition",
                    "for": [
                        "InterfaceTypeDefinition",
                        "ObjectTypeDefinition"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                }
            },
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "InputValueDefinition",
                    "for": [
                        "InputObjectTypeDefinition",
                        "FieldDefinition",
                        "DirectiveDefinition",
                        "ObjectValue"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                },
                "help": "Custom scalar type",
                "instances": [
                    {
                        "node": {
                            "notEditable": true
                        },
                        "data": {
                            "type": "Argument"
                        },
                        "options": [
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "type": "ScalarTypeExtension",
                    "for": [
                        "Extend"
                    ]
                },
                "node": {
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": true
                },
                "root": false
            }
        ],
        "id": "58816208-3210-4114-b620-a2886a378a4c"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": false
        },
        "type": "interface",
        "data": {
            "type": "InterfaceTypeDefinition"
        },
        "help": "Like many type systems, GraphQL supports interfaces. An Interface is an abstract type that includes a certain set of fields that a type must include to implement the interface.",
        "root": true,
        "instances": [
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "FieldDefinition",
                    "for": [
                        "InterfaceTypeDefinition",
                        "ObjectTypeDefinition"
                    ]
                },
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": false
                }
            },
            {
                "options": [
                    {
                        "name": "required",
                        "help": "Check this if this node is required for creation of the type or is required in input | interface"
                    },
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    },
                    {
                        "name": "arrayRequired",
                        "help": "Check this if you want a list here and you dont want null"
                    }
                ],
                "data": {
                    "type": "Implement",
                    "for": [
                        "Implements"
                    ]
                },
                "node": {
                    "inputs": null,
                    "outputs": [],
                    "notEditable": true
                }
            },
            {
                "data": {
                    "type": "InterfaceTypeExtension",
                    "for": [
                        "Extend"
                    ]
                },
                "node": {
                    "description": "",
                    "inputs": [],
                    "outputs": [],
                    "notEditable": true
                },
                "root": false
            }
        ],
        "id": "994e6f14-3883-4484-8a7f-7d63fe048cb4"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": false
        },
        "type": "directive",
        "data": {
            "type": "DirectiveDefinition"
        },
        "help": "A GraphQL schema describes directives which are used to annotate various parts of a GraphQL document as an indicator that they should be evaluated differently by a validator, executor, or client tool such as a code generator.",
        "options": [
            {
                "name": "SCHEMA",
                "help": "SCHEMA"
            },
            {
                "name": "SCALAR",
                "help": "SCALAR"
            },
            {
                "name": "OBJECT",
                "help": "OBJECT"
            },
            {
                "name": "FIELD_DEFINITION",
                "help": "FIELD_DEFINITION"
            },
            {
                "name": "ARGUMENT_DEFINITION",
                "help": "ARGUMENT_DEFINITION"
            },
            {
                "name": "INTERFACE",
                "help": "INTERFACE"
            },
            {
                "name": "UNION",
                "help": "UNION"
            },
            {
                "name": "ENUM",
                "help": "ENUM"
            },
            {
                "name": "ENUM_VALUE",
                "help": "ENUM_VALUE"
            },
            {
                "name": "INPUT_OBJECT",
                "help": "INPUT_OBJECT"
            },
            {
                "name": "INPUT_FIELD_DEFINITION",
                "help": "INPUT_FIELD_DEFINITION"
            }
        ],
        "root": true,
        "instances": [
            {
                "data": {
                    "type": "Directive",
                    "for": [
                        "Directives"
                    ]
                },
                "node": {
                    "notEditable": true
                }
            }
        ],
        "id": "158a5a59-c4d0-4333-a8e8-4ed5ac6778f8"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Boolean",
        "help": "true or false value",
        "id": "261858f3-3373-4f95-861d-8215736cec78"
    },
    {
        "type": "BooleanValue",
        "data": {
            "type": "BooleanValue"
        },
        "help": "true or false value",
        "node": {
            "name": "",
            "description": "",
            "inputs": null,
            "outputs": [],
            "notEditable": false
        },
        "id": "ae673c35-08ac-4199-880f-acdc198057c4"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Boolean",
        "help": "true or false value",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0b50bbec-b35c-4845-9987-b8a656c0670e"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Float",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "id": "845e8d83-15ea-41d5-ae91-ae6df2c2b222"
    },
    {
        "type": "FloatValue",
        "data": {
            "type": "FloatValue"
        },
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "node": {
            "name": "",
            "description": "",
            "inputs": null,
            "outputs": [],
            "notEditable": false
        },
        "id": "0d9d3642-c942-4a59-922c-0e4a35851518"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Float",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ID",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "id": "b8fdac91-761c-4bcb-82f8-432f3aa538ec"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ID",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Int",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "id": "ad63d019-58a6-46c6-b8e0-d0e3088de965"
    },
    {
        "type": "IntValue",
        "data": {
            "type": "IntValue"
        },
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "node": {
            "name": "",
            "description": "",
            "inputs": null,
            "outputs": [],
            "notEditable": false
        },
        "id": "7560f1ef-ac56-4872-9200-7494fc9de261"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Int",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "String",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "id": "64436561-4ac4-4dc0-8021-b70f8dd3d335"
    },
    {
        "type": "StringValue",
        "data": {
            "type": "StringValue"
        },
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "node": {
            "name": "",
            "description": "",
            "inputs": null,
            "outputs": [],
            "notEditable": false
        },
        "id": "7122740f-7171-4b78-8b5a-f4b2697a3bcb"
    },
    {
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "String",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "EnumValueDefinition",
        "data": {
            "type": "EnumValueDefinition",
            "for": [
                "EnumTypeDefinition"
            ]
        },
        "help": "Value of Enum",
        "instances": [
            {
                "data": {
                    "type": "EnumValue"
                },
                "node": {
                    "inputs": null,
                    "outputs": [],
                    "notEditable": true
                }
            }
        ],
        "id": "51b5b275-00dc-4659-b53d-bacbb192f01a"
    },
    {
        "node": {
            "name": "ObjectValue",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "ObjectValue",
        "data": {
            "type": "ObjectValue",
            "for": [
                "InputValueDefinition"
            ]
        },
        "help": "Value of Enum",
        "id": "ff5fdd18-47f5-42b9-873d-1d2feb7d0fb5"
    },
    {
        "data": {
            "for": [
                "Directives"
            ],
            "type": "Directive"
        },
        "node": {
            "notEditable": true,
            "description": ""
        },
        "type": "deprecated",
        "options": [
            {
                "name": "FIELD_DEFINITION",
                "help": "fff"
            }
        ],
        "id": "3b269bbe-5920-4ce7-b0e0-c5e3a76877dc"
    },
    {
        "data": {
            "type": "Argument"
        },
        "type": "reason",
        "node": {
            "notEditable": true
        },
        "id": "adcbd93a-c01f-47dd-86e0-917fa1d72459"
    },
    {
        "type": "Extend",
        "data": {
            "type": "Extend"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": null,
            "notEditable": true
        },
        "root": true,
        "help": "Extend type,input,union,interface,enum with this node",
        "id": "38079fc2-6dda-4da3-82d2-b5f1fe8d2966"
    },
    {
        "node": {
            "notEditable": true
        },
        "type": "Implements",
        "data": {
            "type": "Implements",
            "for": [
                "ObjectTypeDefinition"
            ]
        },
        "help": "Connect interface nodes to make type implements them",
        "id": "09fd226c-a0d0-487a-a630-c6383892a302"
    },
    {
        "node": {
            "notEditable": true
        },
        "type": "Directives",
        "data": {
            "type": "Directives",
            "for": [
                "FieldDefinition",
                "ObjectTypeDefinition",
                "EnumTypeDefinition",
                "InputObjectTypeDefinition",
                "InterfaceTypeDefinition",
                "UnionTypeDefinition",
                "ScalarTypeDefinition",
                "EnumValueDefinition",
                "InputValueDefinition"
            ]
        },
        "help": "Connect directives to use them",
        "id": "06c48c37-99a8-460f-891f-3c564d943a86"
    },
    {
        "node": {},
        "type": "Comment",
        "root": true,
        "data": {
            "type": "Comment"
        },
        "help": "Connect interface nodes to make type implements them",
        "id": "122081ee-945b-4d9e-99b5-ec79c40dad6c"
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Query",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "395fd960-6a13-4e12-8205-7002fb83b272",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Query",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "76b1d9c5-70f6-4c1a-a01d-b30497eb7a24",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Query",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "1d4b5f6b-d785-44eb-b8fe-4cb88a1d5019",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "CapsulesFind",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "3d31f19f-052b-4fe2-b095-fd2eb030629e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "CapsulesFind",
        "data": {
            "type": "InputObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": false,
        "id": "25b71cfa-b625-4913-aec7-6732ea196845",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Date",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "6ed8648f-c94e-44c8-9c80-f5ab23468eb9",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "scalar",
            "data": {
                "type": "ScalarTypeDefinition"
            },
            "help": "Custom scalar type",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "help": "Custom scalar type",
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "ScalarTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "58816208-3210-4114-b620-a2886a378a4c"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Date",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "scalar",
            "data": {
                "type": "ScalarTypeDefinition"
            },
            "help": "Custom scalar type",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "help": "Custom scalar type",
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "ScalarTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "58816208-3210-4114-b620-a2886a378a4c"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Date",
        "data": {
            "type": "ScalarTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "Custom scalar type",
        "root": false,
        "id": "6d891e2d-f884-435b-8494-9880624d09dd",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "scalar",
            "data": {
                "type": "ScalarTypeDefinition"
            },
            "help": "Custom scalar type",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "help": "Custom scalar type",
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "ScalarTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "58816208-3210-4114-b620-a2886a378a4c"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Capsule",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "4cc60a41-e466-4162-bcfc-175502a064f9",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Capsule",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "1336a270-9ea4-4df6-a481-e55541340651",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Capsule",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "34a741c7-921c-45ff-89d6-182bd4da557e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "CapsuleMission",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "009f5c08-27bc-48a4-ada1-858c7f77663c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "CapsuleMission",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "d8d077bf-db6d-44dc-bc55-12c2f82a1a08",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "CapsuleMission",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "a84cbe53-751a-44e4-a550-b04bad8853e1",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Dragon",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "9b75f921-bf9c-41f1-abaa-c4a201e23b4c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Dragon",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "fb896f15-990d-49e7-94e1-d20596730e50",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Dragon",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "830e58b5-b43d-47ae-9c84-d5705954a9aa",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Distance",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "d6c2b124-57e7-4783-aec8-9e43585883fc",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Distance",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "d6fc4e08-481c-4e55-9b23-94a813736d9f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Distance",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "99744ba4-353e-4d4b-a766-c4e4b6160030",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonHeatShield",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "0ffa9590-15db-45ae-8c89-d37a5f066433",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonHeatShield",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c8e3b23b-6199-4a22-b031-d229d6cfb1ce",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "DragonHeatShield",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "e390868c-4534-4951-9512-a986630412b5",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Mass",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "6f7e6ea3-1a2c-4a4a-91ae-8d438becc708",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Mass",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "7aa2426f-8d90-4ed1-ba6e-b22e52dc5cdc",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Mass",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "8733483f-35c9-478f-8d0a-82688ee5f29a",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Volume",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "f8759ed9-8d1f-463b-9b9c-e299b70c1922",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Volume",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "28935f7b-bbad-4024-8fa2-c671d7300f72",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Volume",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "a550c60f-260a-44ec-9505-64a1aac62b46",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonPressurizedCapsule",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c2b7c5db-b2a1-4a1b-8d14-955af3384e1f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonPressurizedCapsule",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "211094ef-45de-4600-b9fb-bab7dfea0d9b",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "DragonPressurizedCapsule",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "28c11359-3b70-40b3-b21b-66949493a2fb",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonThrust",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "276d6ea8-e76a-4953-bae3-1a0c9ada7534",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonThrust",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "14c401ac-85df-494e-9de4-791f2f437adf",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "DragonThrust",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "b0acf4dd-34b7-4bd2-a702-36cba3e644b8",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Force",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "6f8e9609-0b15-40d1-b321-a1831a9a2e58",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Force",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "67c52370-8031-4ec2-a33a-d26feff88b1a",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Force",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "2c781eb9-b5be-43d5-bc67-d6efae293ecd",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonTrunk",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "6f50811c-f5af-4982-9c4d-992ec45dc582",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonTrunk",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "fa83562a-3c0f-4d57-8c34-8f1415f9f1e8",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "DragonTrunk",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "0815b6ee-5420-4727-be1f-2b123e309498",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonTrunkCargo",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "e947afed-5b0e-4fb2-a052-26d6742898f6",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "DragonTrunkCargo",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "7ce93e24-624d-4311-beaa-2b0f7d7e8859",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "DragonTrunkCargo",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "e36a5b5d-b18b-40bb-b7ff-d4769f81c512",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Info",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "4dedc1e1-d49a-4c03-9c2d-0689a8b1f9a4",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Info",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "5ca5e06f-68e3-4d95-838f-fb81e38fe9c0",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Info",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "5bf16382-f20e-4e69-8213-ebd917d87a6b",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Address",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "b95693fb-226a-4b37-aa6f-111bac756071",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Address",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c3083d88-24ff-4399-a025-936338bf1801",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Address",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "5176f453-008a-4a2b-aee2-4042614b8227",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "InfoLinks",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "242ae71d-fbf1-469b-9a59-4ec3f3a0c9c5",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "InfoLinks",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "17923c06-d204-4b6d-a383-09e5dda449ae",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "InfoLinks",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "5091c841-3d55-4843-992d-665aa4245f58",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "CoresFind",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ae361ef3-3897-4d8a-bd9e-bf550a051d14",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "CoresFind",
        "data": {
            "type": "InputObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": false,
        "id": "4513fe27-419c-44be-8da4-342296d4bea8",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Core",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "da7a6e45-549d-4012-9967-9f6809739091",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Core",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "f490f60e-5458-4f11-9cf8-b9bc7ccbd483",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Core",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "0a40ae83-d1aa-4c87-8dc1-ecce95bdaf83",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "HistoryFind",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d37a75f1-3167-409a-bc05-c894f58e5cb2",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "HistoryFind",
        "data": {
            "type": "InputObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": false,
        "id": "38937e72-1b92-4214-a4e7-8aed69f31e1f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "History",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "302ac15b-7482-452c-abad-b228dfeb45fe",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "History",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "94ca42e6-ff63-4ab1-b80b-719f936f085e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "History",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "30a89d8c-4232-466e-84f8-70cb5e1b9bce",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Link",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "98973ba6-4411-4392-a524-bb8f0b090658",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Link",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "03defbc9-d08c-40c6-bf07-e690bb66e8e1",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Link",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "d7c175a5-1254-4532-959d-d15c3085f577",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Launch",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "094497d0-c627-454c-a0c2-1d9dd43fc6f2",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Launch",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "7ba2baf4-e72c-40c0-92d9-5529743a1f46",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Launch",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "8440779a-3741-4a15-aaca-3ac0ee7ed553",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchSite",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "8b3024f2-852b-41b2-b6d8-7af9ed913134",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchSite",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "4d708e5c-0139-4081-b2e1-73bf4361645d",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchSite",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "f2a2f5a4-f2a5-43b8-818d-c1a9900a9bb9",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchLinks",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "93e919db-5727-4bbb-8c51-8a40cdc3ab56",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchLinks",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "9387267d-29ef-48a1-8979-aace7b5cddd6",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchLinks",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "fb6ad043-7cea-48f0-ba5f-74152faa9fe1",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocket",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "5d46637e-a754-4e88-8d74-77bc1d70b069",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocket",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "cb6d7c89-e7bb-446c-b587-361b99d95c87",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchRocket",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "1a3b6661-d5f6-444c-8b5b-4586ae63363c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketFairings",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "1003c6da-a11c-4bbb-b23b-1e33b17ed65a",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketFairings",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "239edeb3-829e-4477-8dee-32eafa0d1c05",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchRocketFairings",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "f2df2265-1474-4e71-b895-ef70f862e713",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketFirstStage",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "f3d471ec-1724-426b-bbdf-402d60d01ad4",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketFirstStage",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c4cf21fa-1843-4c16-beec-c9a21310e805",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchRocketFirstStage",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "a3967047-b16b-49e0-88c7-4525e8d18d28",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketFirstStageCore",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "ea33de20-ebc0-40f6-8a94-40357b821d6d",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketFirstStageCore",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "eade3ccb-a148-4a19-9f1d-0ba055f8b89b",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchRocketFirstStageCore",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "2100bc85-7788-48f4-b3f3-0a2e50d2fd62",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Rocket",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "ccb31433-38a1-4bd7-a02a-a5771d318e41",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Rocket",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "342edb18-ac38-4163-960a-0d222af037a2",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Rocket",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "a02967ae-396c-43e1-a63e-abfb3c61f18e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketEngines",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "59ce865f-27a2-4ec9-b784-86fff831fa57",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketEngines",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "df7d5eee-85a9-46ca-a57c-d55c7995a598",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketEngines",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "a5e84c16-fbed-4686-85c2-f2469468407e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketFirstStage",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "7560b7ba-8e3d-4e79-ae43-621904d84acc",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketFirstStage",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c5fca221-382c-4a65-ab54-5ad5c15eb220",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketFirstStage",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "b8c12bec-9e55-4567-a7cc-7fb32a0b1941",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketLandingLegs",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "7e767a87-209f-42e6-a691-33ee8d3d043f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketLandingLegs",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "455a937a-7c2b-4611-bb9f-fe48ef713da2",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketLandingLegs",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "52bbe5fb-0077-41ce-8674-7c11f2ee65b9",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketPayloadWeight",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "6125f90d-67a6-4c36-b103-fbb0ccac0c3b",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketPayloadWeight",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "80c3e26a-c6e5-4dab-8d8a-27699bf1aa5c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketPayloadWeight",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "8a213fa8-fc4a-4702-bb6b-a9fe7800dd40",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketSecondStage",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "e59c760c-e33d-419c-9246-c74bb6d05726",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketSecondStage",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c484e189-5aae-4cce-a511-dd91a6afe575",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketSecondStage",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "c6c5651c-6bb8-47ee-b363-481659b572e1",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketSecondStagePayloads",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "72811f38-2a16-481a-bf73-18b88391ee52",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketSecondStagePayloads",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "9e10759b-5a88-4b78-b1bd-2f666c90ce9e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketSecondStagePayloads",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "5ca5496d-1398-4a62-91cb-659847a19dd1",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketSecondStagePayloadCompositeFairing",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "272408cf-5ea0-4673-8a18-3fcbe3803e4f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketSecondStagePayloadCompositeFairing",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "f1ea8166-e522-455c-90bc-fac29c1ca0ab",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketSecondStagePayloadCompositeFairing",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "2207f917-d1e9-474b-a9a2-c0187b81c8bc",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketSecondStage",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "812d250b-78d1-41ae-87ce-bafcb35169da",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchRocketSecondStage",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "83c433b5-0292-4246-85a4-1cdae12f09eb",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchRocketSecondStage",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "69473494-f09a-4548-a3ca-421cfd6a7a28",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Payload",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "4964e463-c76a-4f02-98c5-b965710e29da",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Payload",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "6fe950e6-eece-4e14-8b4e-65fb92126427",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Payload",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "69d7f636-47b9-4896-bdcd-f7bf51440c02",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "PayloadOrbitParams",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "8e2028aa-8b84-4613-8ca4-8e8e424c8255",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "PayloadOrbitParams",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "31e700b3-b1ee-404d-bb96-227264f46ad2",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "PayloadOrbitParams",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "6239897b-a402-4ab9-820d-23d25873c9f8",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchTelemetry",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "90bc1344-96ab-461a-bddb-5b3e5b0f3d4f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchTelemetry",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "d5e7d0c3-302c-4870-9091-a0a77e514191",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchTelemetry",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "aef109fd-f0c4-4b02-8662-657221b0f2e9",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Ship",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "90ec7f2f-aa0d-4aa4-8c83-6d9b8e597824",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Ship",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "dbd4023b-cdbf-491b-8ed1-4ae6d9e24d8e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Ship",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "9ebd2104-dbd3-4d9e-9085-88f0000dd3f5",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ShipMission",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "cc2dae5f-3c8c-42d0-8373-f6050f4508df",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ShipMission",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "2df80c1e-bb60-4a4f-adaf-b6227a506701",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "ShipMission",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "7946ddb3-71f9-4750-9de7-b09294d68bbe",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ShipLocation",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "ab6ec309-26c3-4ce0-b6a4-c477e4631542",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ShipLocation",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c0a2895c-d68f-4d4e-bf07-45375da0bdfa",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "ShipLocation",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "ca26932c-cfe4-4564-9ea7-5ae35f087389",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "HistoriesResult",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "5fe7060b-c964-4d06-ac6d-9830224d4f7a",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "HistoriesResult",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "198f5311-aeee-4366-b068-bba82a8b8326",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "HistoriesResult",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "b8ff45ab-0806-47fd-b8b6-bf9bc3e353e6",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Result",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "976dc550-4b14-485d-9b52-0e74f972abce",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Result",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "41c2e8ec-61f6-4e66-8f7f-1cb84dcd4d29",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Result",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "6e56233e-5912-4d31-a404-405ac78d5854",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Landpad",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c1dc6ff7-9f8d-425e-b5c8-15d4685e64c9",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Landpad",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "0d4047d5-548b-4c18-b168-7360e0d3cff4",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Landpad",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "1b9ac1c3-bbe2-433e-b915-e9bb4b397abf",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Location",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "41b8f7ba-4fd2-4d84-aa9a-f5e80a260f07",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Location",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "a7925248-f13e-4f98-ae44-11eb9d200b6f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Location",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "0c07355c-d70f-4374-af3a-347041794d2f",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchFind",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1b400ffb-e555-4a5d-9f87-4664ce0d2c1c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchFind",
        "data": {
            "type": "InputObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": false,
        "id": "5b887758-69ca-47cd-98d5-354a68e7e46b",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchesPastResult",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "85f773eb-acc3-48bc-91f3-f8417689dcfd",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "LaunchesPastResult",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "0b7586bf-c514-4935-a361-c7674e332009",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "LaunchesPastResult",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "607bc2f9-b4d8-4199-81c7-d36c53e8ef80",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Launchpad",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "4194c5e3-d822-401c-8e29-f3dd673c1d54",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Launchpad",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "fba4cc27-1cf2-4fec-8d40-4a934e21374d",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Launchpad",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "ee18f27a-0bff-4679-88a0-89b727d27bbf",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "MissionsFind",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "af8597f7-7e1e-46c8-970e-f2b1ae075bd0",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "MissionsFind",
        "data": {
            "type": "InputObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": false,
        "id": "bd161899-efbc-45af-80b8-dc41b02d1571",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Mission",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "b8c9a9b2-2ac7-4ce2-9a04-2dc037b1a8aa",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Mission",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "c6118641-d929-4815-84b1-c28959a882e5",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Mission",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "c2f9d4c6-acb7-430c-85e1-447de0cfd7cf",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "MissionResult",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "4b838284-c64d-4708-b898-0353e082fbed",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "MissionResult",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "171595f4-5fb8-441e-8e8e-6affef18120c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "MissionResult",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "28e104bb-a384-4957-bcc5-4248598f32ce",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "PayloadsFind",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ae83fb8d-c953-481d-9254-6a82670bbc95",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "PayloadsFind",
        "data": {
            "type": "InputObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": false,
        "id": "6e6c0364-6b2d-4029-9dc4-848c49e21216",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Roadster",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "f981d2ff-14fe-461e-b6be-83db2c17c7d1",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "Roadster",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "406e59d5-8d62-4396-b11e-1337f4ea5703",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "Roadster",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "aaf7e325-3d31-43ec-b2ec-33fe5a312494",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketsResult",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "72e6bb1f-a5b8-4052-b88b-a81b6be64c30",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "RocketsResult",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "78d9fa5f-0f0d-4a6e-bd5c-cf7661cf1780",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "RocketsResult",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "2d1153ab-f0d4-4d59-8c79-c84a12f09344",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ShipsFind",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "cd43e169-4447-418d-9bc8-2976fe8174a6",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "ShipsFind",
        "data": {
            "type": "InputObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "root": false,
        "id": "73b0e7a9-4117-44b9-934a-3d201d2c1915",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "input",
            "data": {
                "type": "InputObjectTypeDefinition"
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "InputObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ShipsResult",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "f4611fda-e8fe-420f-a309-8fa38ba45101",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ShipsResult",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "1111a82d-e6c3-4654-88cb-4c181ad18c45",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "ShipsResult",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "140289f6-9519-4163-812d-6b03b76113d4",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "CoreMission",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "e20dde25-d9b0-41e0-960c-edd60de51a4b",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "CoreMission",
        "data": {
            "type": "UnionMemberDefinition",
            "for": [
                "UnionTypeDefinition"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "3d65a059-dd27-42e1-8651-edc8d464726a",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "CoreMission",
        "data": {
            "type": "ObjectTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
        "options": [
            {
                "name": "query",
                "help": "This is your endpoint where you serve your data out of your server."
            },
            {
                "name": "mutation",
                "help": "Mutation is the same as query but here you also mutate data in your database"
            },
            {
                "name": "subscription",
                "help": "Subscribe to some real-time event in your database"
            }
        ],
        "root": false,
        "id": "44dc2dc2-2f94-413a-b215-878b682bec99",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "type",
            "data": {
                "type": "ObjectTypeDefinition"
            },
            "help": "The most basic components of a GraphQL schema are object types, which just represent a kind of object you can fetch from your service, and what fields it has. ",
            "options": [
                {
                    "name": "query",
                    "help": "This is your endpoint where you serve your data out of your server."
                },
                {
                    "name": "mutation",
                    "help": "Mutation is the same as query but here you also mutate data in your database"
                },
                {
                    "name": "subscription",
                    "help": "Subscribe to some real-time event in your database"
                }
            ],
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "UnionMemberDefinition",
                        "for": [
                            "UnionTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "query",
                            "help": "This is your endpoint where you serve your data out of your server."
                        },
                        {
                            "name": "mutation",
                            "help": "Mutation is the same as query but here you also mutate data in your database"
                        },
                        {
                            "name": "subscription",
                            "help": "Subscribe to some real-time event in your database"
                        }
                    ],
                    "data": {
                        "type": "ObjectTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "c6c5cb95-8d9c-4b8a-be7f-9bef3859fc02"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ObjectID",
        "data": {
            "type": "FieldDefinition",
            "for": [
                "InterfaceTypeDefinition",
                "ObjectTypeDefinition"
            ]
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "id": "56a25324-ffdd-491d-9255-1817efc2a4f7",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "scalar",
            "data": {
                "type": "ScalarTypeDefinition"
            },
            "help": "Custom scalar type",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "help": "Custom scalar type",
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "ScalarTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "58816208-3210-4114-b620-a2886a378a4c"
        }
    },
    {
        "node": {
            "name": "",
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": false
        },
        "type": "ObjectID",
        "data": {
            "type": "InputValueDefinition",
            "for": [
                "InputObjectTypeDefinition",
                "FieldDefinition",
                "DirectiveDefinition",
                "ObjectValue"
            ]
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "required",
                "help": "Check this if this node is required for creation of the type or is required in input | interface"
            },
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            },
            {
                "name": "arrayRequired",
                "help": "Check this if you want a list here and you dont want null"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "496fe5d4-cfa4-46fa-a3e8-717640cbb879",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "scalar",
            "data": {
                "type": "ScalarTypeDefinition"
            },
            "help": "Custom scalar type",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "help": "Custom scalar type",
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "ScalarTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "58816208-3210-4114-b620-a2886a378a4c"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "ObjectID",
        "data": {
            "type": "ScalarTypeExtension",
            "for": [
                "Extend"
            ]
        },
        "help": "Custom scalar type",
        "root": false,
        "id": "c0d88e92-5a1a-4d91-8f6e-6281275db038",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "scalar",
            "data": {
                "type": "ScalarTypeDefinition"
            },
            "help": "Custom scalar type",
            "root": true,
            "instances": [
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "FieldDefinition",
                        "for": [
                            "InterfaceTypeDefinition",
                            "ObjectTypeDefinition"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    }
                },
                {
                    "options": [
                        {
                            "name": "required",
                            "help": "Check this if this node is required for creation of the type or is required in input | interface"
                        },
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        },
                        {
                            "name": "arrayRequired",
                            "help": "Check this if you want a list here and you dont want null"
                        }
                    ],
                    "data": {
                        "type": "InputValueDefinition",
                        "for": [
                            "InputObjectTypeDefinition",
                            "FieldDefinition",
                            "DirectiveDefinition",
                            "ObjectValue"
                        ]
                    },
                    "node": {
                        "name": "",
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": false
                    },
                    "help": "Custom scalar type",
                    "instances": [
                        {
                            "node": {
                                "notEditable": true
                            },
                            "data": {
                                "type": "Argument"
                            },
                            "options": [
                                {
                                    "name": "array",
                                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                }
                            ]
                        }
                    ]
                },
                {
                    "data": {
                        "type": "ScalarTypeExtension",
                        "for": [
                            "Extend"
                        ]
                    },
                    "node": {
                        "description": "",
                        "inputs": [],
                        "outputs": [],
                        "notEditable": true
                    },
                    "root": false
                }
            ],
            "id": "58816208-3210-4114-b620-a2886a378a4c"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "rateLimit",
        "data": {
            "type": "Directive",
            "for": [
                "Directives"
            ]
        },
        "help": "A GraphQL schema describes directives which are used to annotate various parts of a GraphQL document as an indicator that they should be evaluated differently by a validator, executor, or client tool such as a code generator.",
        "id": "e15e54fb-a690-4d01-8ec9-25e030391c6e",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": null,
                "notEditable": false
            },
            "type": "directive",
            "data": {
                "type": "DirectiveDefinition"
            },
            "help": "A GraphQL schema describes directives which are used to annotate various parts of a GraphQL document as an indicator that they should be evaluated differently by a validator, executor, or client tool such as a code generator.",
            "options": [
                {
                    "name": "SCHEMA",
                    "help": "SCHEMA"
                },
                {
                    "name": "SCALAR",
                    "help": "SCALAR"
                },
                {
                    "name": "OBJECT",
                    "help": "OBJECT"
                },
                {
                    "name": "FIELD_DEFINITION",
                    "help": "FIELD_DEFINITION"
                },
                {
                    "name": "ARGUMENT_DEFINITION",
                    "help": "ARGUMENT_DEFINITION"
                },
                {
                    "name": "INTERFACE",
                    "help": "INTERFACE"
                },
                {
                    "name": "UNION",
                    "help": "UNION"
                },
                {
                    "name": "ENUM",
                    "help": "ENUM"
                },
                {
                    "name": "ENUM_VALUE",
                    "help": "ENUM_VALUE"
                },
                {
                    "name": "INPUT_OBJECT",
                    "help": "INPUT_OBJECT"
                },
                {
                    "name": "INPUT_FIELD_DEFINITION",
                    "help": "INPUT_FIELD_DEFINITION"
                }
            ],
            "root": true,
            "instances": [
                {
                    "data": {
                        "type": "Directive",
                        "for": [
                            "Directives"
                        ]
                    },
                    "node": {
                        "notEditable": true
                    }
                }
            ],
            "id": "158a5a59-c4d0-4333-a8e8-4ed5ac6778f8"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "481be3a5-bd06-42c4-8b59-16354bd0aa87",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "landings",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6ac4ec5c-35a4-4172-8628-494f188a1510",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "mission",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "71398fd0-b283-473d-96dd-c8a86c599612",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "original_launch",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "22822712-e5a9-4476-8409-fbb588762abd",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "reuse_count",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "31eb3be2-c147-4f3b-9e0b-16e1c24ff838",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "status",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0f83928f-7891-46f2-9968-ead004fe95c0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "type",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7a63f8c6-2536-4922-aaa5-66c7b43d12dc",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "asds_attempts",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "84236c4d-79c7-450f-84fb-041cdc2bbdbc",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "asds_landings",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "684048c8-f664-4dc9-b7c0-0ca711f29e17",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "block",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "bbff589b-806a-4eab-a3a9-3d3f22330c3b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "afc08ad7-ecfe-456e-bdbf-232623a5a1dc",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "missions",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "8d1fb01f-c522-4153-b114-9eefb01d6d09",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "original_launch",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d60e908d-fc4e-4d67-8708-ee321db82f5c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "reuse_count",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "57ce533e-002b-4f25-8dcb-f2b911daf1e5",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "rtls_attempts",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "93b8d478-53e1-46f2-a3ff-49b4aa5f9d33",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "rtls_landings",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "52dd0d30-1567-4187-8034-9c3221410df8",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "status",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0c4d21d2-285c-4bfd-bcd1-fd6e98fc44b5",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "water_landing",
        "help": "true or false value",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ee7a04f1-1155-48d5-baab-1b3e5511f562",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Boolean",
            "help": "true or false value",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "0b50bbec-b35c-4845-9987-b8a656c0670e"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "end",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "687395c3-dc4d-499c-8dc4-0c70d689e0e4",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "flight_number",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "446bd122-1773-4fee-af12-6fad5ce93ca1",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "9249eabb-00f6-4011-8cbd-369730160272",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "start",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "af1dbeb8-030f-48d7-9830-6d606c836c2a",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "apoapsis_km",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "453be204-ce82-4737-856b-e7490353a7c0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "block",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5d64a3cd-6877-4aa0-a9c9-6f4713605e70",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "cap_serial",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7dd0fde6-68b4-4ba7-8f7f-5ea7fb77cce2",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "capsule_reuse",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "92314c57-4e2b-4534-b682-51c31bd5b1ee",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "core_flight",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0db2b0b8-2387-4672-a524-a5e7de0b72c0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "core_reuse",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "db9c92d6-d1b8-4d5a-a4f4-7c0dbf5d7f06",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "core_serial",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a22b644b-04be-4a4c-9ad4-11d10195ab19",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "customer",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "47fb7cbc-b907-4330-8dc1-4fbb20c4fa09",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "eccentricity",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "9ac31f94-6a3d-4ea1-896d-903d8df3b405",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "end",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "47031d8c-a46d-4a98-8f95-72bfb6bbc1a5",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "epoch",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "dbc4a2f0-f2f9-46b6-b339-51ed877234fc",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "fairings_recovered",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "284ff6cf-f0ee-4829-8d26-33a701bb0305",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "fairings_recovery_attempt",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ae1e17e3-f824-47b3-856f-0edea28b9998",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "fairings_reuse",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "3f2c43c1-c710-4f23-9c74-2eca0b2bb660",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "fairings_reused",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4bdc07e2-013e-4126-8072-cb2cfe3c5855",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "fairings_ship",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "f1cc4e27-dbbe-49be-b2c5-43886330e1aa",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "gridfins",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1d8a166b-4417-4748-b10b-0080a9a27e9b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1932d13a-bb52-44cb-b626-5a6e03e04908",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "inclination_deg",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c3c96af7-a129-44a3-8158-413e49a03189",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "land_success",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "fcafbc9a-758a-4562-a6b1-e6bbfc33f8db",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "landing_intent",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7d34b8ba-64bf-4207-b344-3e772cb4e845",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "landing_type",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4d76ff38-3db3-44db-86eb-bf1443811c89",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "landing_vehicle",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "3f04879c-ccff-4723-911f-9ed207554fe6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "launch_date_local",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5c473dd4-be51-4bbd-956c-1b5cf857e0d1",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "launch_date_utc",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "9293e351-3eee-4065-b962-b9eed1c6f670",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "launch_success",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ae7ff4f2-7c29-49e7-8524-16c2d89de94b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "launch_year",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a98228d6-0136-4f28-a45a-bc464ed046c4",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "legs",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ca01bee7-0da4-46eb-880a-43d02d5a43de",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "lifespan_years",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0c133098-2697-4aaf-9970-35beb073d716",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "longitude",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "aee85c9b-aebb-4625-9d89-147b527e920a",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "manufacturer",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "554ec4ea-102d-4566-bd75-ad988a147705",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "mean_motion",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7e6b8588-5016-4173-9b08-2c5649796b49",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "mission_id",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "8d7b5885-6b5d-4554-a33f-bbaf8602e985",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "mission_name",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "87b9c2a0-c196-4943-93ec-ed0786e32d35",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "nationality",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "8b206167-6f4d-46bf-a0c0-54be9affc0cb",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "norad_id",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5452ae9e-2db5-4f8c-8ecd-57eb58bfc0f3",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "orbit",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "51922893-c038-4d1f-a39d-af73e343104b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "payload_id",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "f2421175-2b68-47cb-9e19-480249b3cab7",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "payload_type",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0b6174b2-2475-410c-b803-64e8fca3376b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "periapsis_km",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "056163f5-aaac-4b5e-b02d-4b040a6b024f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "period_min",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "30fbf0d5-a23a-4517-87f9-0d3b3b51bced",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "raan",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b4b7be93-f5a7-44f7-b0d8-6e8b19ed2332",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "reference_system",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "bf707f4c-84d6-4f4a-9e0c-05ad2155a544",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "regime",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "67d9afb8-af03-4bfb-b9ae-90f8eedf4c03",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "reused",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "338cf224-20ca-4b25-8cb4-1df7e7fc4828",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "rocket_id",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a6c4d6bb-0cae-40d8-8599-8ed58e7096b9",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "rocket_name",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "43ec8328-2d8c-41fc-bd1e-08a0eb4a3b6d",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "rocket_type",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "934c3139-9aac-4c04-a9f9-8bfbced5e984",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "second_stage_block",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4c9964b8-941d-4de6-8aac-3905ccd796f0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "semi_major_axis_km",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "06553668-d626-41c2-9a2b-a851e461c62f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "ship",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "723301b4-ff2d-44d3-a29c-aea34d88f776",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "side_core1_reuse",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "293d609c-5eda-4a91-b02a-8a2e75ffb7ed",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "side_core2_reuse",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "f3f352d2-9cbf-45d8-8c64-30f74229dfa6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "site_id",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6e56183a-c1a9-4a46-b03d-3cfbe1499ee6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "site_name_long",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "2804c950-f9d9-48b8-ab0d-dfff5fbde9d8",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "site_name",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "22ff672d-01f1-4405-b978-d59027706e6d",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "start",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6952f3fc-150f-4a66-8371-48c2b58d3001",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "tbd",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "9b607bc1-cb3d-4df5-af12-afa8d7c2fc83",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "tentative_max_precision",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5c865c9b-c696-4822-8958-7e14a43a57d6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "tentative",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b270f839-56b8-4fdb-8c86-dbca009b1a74",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "effae8cf-70f5-43df-a56f-8574d723ad71",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "manufacturer",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "221ae89d-d46c-4efb-8e50-283e0cb6df86",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "name",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "76d90323-3663-48c8-988d-5fe1710e9e72",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "payload_id",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "50b41e3c-28fa-41b8-8a49-857dac958833",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "apoapsis_km",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "8778ef78-f5e6-4f66-9da3-694db09d759b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "customer",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d15d6ce8-2b2e-434d-9987-81a0d3cc0a87",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "eccentricity",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ccbba490-da5a-4d5c-9a1c-9ccd1dcc07ab",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "epoch",
        "data": {
            "type": "Argument"
        },
        "help": "Custom scalar type",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4603ec59-528d-4ca0-a056-df803e159644",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Date",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "Custom scalar type",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "c361f7d1-08dc-45ea-a447-f661369a4f69",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "scalar",
                "data": {
                    "type": "ScalarTypeDefinition"
                },
                "help": "Custom scalar type",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "FieldDefinition",
                            "for": [
                                "InterfaceTypeDefinition",
                                "ObjectTypeDefinition"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        }
                    },
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "help": "Custom scalar type",
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "ScalarTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "58816208-3210-4114-b620-a2886a378a4c"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "inclination_deg",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6627f1b3-3154-4bbb-9249-6469e6118c30",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "lifespan_years",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4bd3e8c4-d04a-45c8-b87a-9e30b1a1b0a5",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "longitude",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "deae8484-634e-4924-837c-297b8d29f4f3",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "manufacturer",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "07d329c6-761d-4862-a26a-b55add080b3e",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "mean_motion",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4499bbd2-0210-4255-a879-9fb221c5361f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "nationality",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a61de4ae-05e7-4a1e-bb0c-c6c79aa24311",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "norad_id",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "33b26ac3-4e3c-4a81-966a-07cb121f9d04",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "orbit",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d5bcc342-a75d-486b-832b-c22373c99970",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "payload_id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5be97031-5783-42f6-a28d-be62581b62a1",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "payload_type",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6598c3c5-818a-488d-bd5e-a532f5c4d5dd",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "periapsis_km",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "aa2dbf10-5a83-4fc8-bd50-9abf8a8efa1c",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "period_min",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "377a9244-ef63-4610-a5ea-916b72b3ecb0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "raan",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c35ec604-ed4d-4063-959c-799a9557d54b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "reference_system",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "e37d0ddf-f0b7-498a-a486-1b392959c2b3",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "regime",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "fbb742f6-4bec-43d0-8247-2ed120c85dbf",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "reused",
        "help": "true or false value",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1138633a-2c2a-4dc6-a182-6063e4b965d0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Boolean",
            "help": "true or false value",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "0b50bbec-b35c-4845-9987-b8a656c0670e"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "semi_major_axis_km",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "fe86573d-f627-4cf9-b8c7-0a49f762c486",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "39c1cf55-9dec-4143-bc1b-053681a8e263",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "name",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "8c8fbc2f-7815-48b9-90fe-da8fa378aecf",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "model",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d7bfd68c-6988-423e-94a1-a45608ed6e40",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "type",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a9c6ea2b-1dfc-4d7a-b1f3-3346a7b7f996",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "role",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5034b7e0-3e94-455a-891a-dcd4d9466f27",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "active",
        "help": "true or false value",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7cf933c1-7f1f-40fb-9bc1-715cfc0663cf",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Boolean",
            "help": "true or false value",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "0b50bbec-b35c-4845-9987-b8a656c0670e"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "imo",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b2641fc6-eee0-47ea-ab60-9d0c9369de63",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "mmsi",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6219b3b0-4dc7-47ab-83e3-9decaea469cd",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "abs",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "2c6fc61f-a3dc-4e31-9042-b5d84bc9aa7e",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "class",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a15bf49d-493e-4646-9363-00f2b3a93802",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "weight_lbs",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "e46ec99a-782c-4f66-9be1-9e4014316c01",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "weight_kg",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b56de862-4c19-417e-b9c9-7c8389c6f526",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "year_built",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7e439d9c-4c3c-47e3-a042-27169e761efb",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "home_port",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1e39d373-1c36-45f3-9257-51dc56863d64",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "status",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "334c3b33-89b7-48ce-9959-746c11ea60ea",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "speed_kn",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c62ca9db-1a52-4e51-a744-1b467decd5d1",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "course_deg",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b06d1058-9710-4690-85e0-fa82f90ce0f8",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "latitude",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "bb672d58-c928-49ab-b8eb-484b86606d84",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "longitude",
        "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a2c2af1f-0890-4e90-a418-c7632863d994",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Float",
            "help": "Floating point value like 2.345, 3334.1, -11.2, 0, 1.0",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "604c6087-be8e-4a38-b247-d97e2bac59b6"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "successful_landings",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7689ec26-fccd-480c-963d-56e172bee141",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "attempted_landings",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "63df65fd-4cf9-4020-8b8e-ce134def2955",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "mission",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7999a8dc-b9e6-4205-83cb-da59fba7ed32",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "max",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "91cba026-088c-44ba-bea2-d0191d76629c",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "window",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "00cb563a-153e-444a-b7ac-f75f0186b266",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "message",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "104c2d2c-81ad-4e8a-8369-67431f8381b6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "identityArgs",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b4cda3a3-08b2-4591-9d98-eccc3200a2fd",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6f0ab62e-9bce-401b-9d2b-590f41c0ba66",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "CapsulesFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "3d31f19f-052b-4fe2-b095-fd2eb030629e",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d9cb5c21-9145-4485-b2e6-5a34c85da69c",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b2d4b8c5-11e1-4549-bd7f-605377788b55",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a2cdb33b-1e7b-44e8-a63b-326a8a305f62",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "fee96dbc-89f3-4651-ab1b-c57ac49546fc",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "09ef7873-b749-49e8-a8b4-a3ad0e614845",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "CapsulesFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "3d31f19f-052b-4fe2-b095-fd2eb030629e",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "024fe0eb-7fed-4862-a4bb-5cffca08c18e",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "cf9dc8b7-4f06-433b-9936-37c1d9ebefe9",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0e18efba-0c10-4f58-bb82-bad1beeac0bc",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "40ede78a-0c24-489e-8369-fdf6cd297ed5",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "00ba86f5-fc63-4437-82e2-0588a2ce9d5b",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "CapsulesFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "3d31f19f-052b-4fe2-b095-fd2eb030629e",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a6d881e8-4079-4ac7-b029-e692808642f7",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c1b792b6-fb64-4b1d-9b20-2b4d1b8ed867",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "15196732-dffa-4c19-8e02-661e71ca51ee",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d0750ac8-f9ba-4a3e-903d-1c3bd2d2e154",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "167d7587-c339-4adf-b6c2-180a44370ba3",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1b48cdf7-5fd1-4f41-a70b-ca6e2fbba9e4",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "CoresFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "ae361ef3-3897-4d8a-bd9e-bf550a051d14",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d6da01f0-9b74-4c3f-b91b-3fdf1a086293",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "181e22fe-f484-4cd4-a324-1eba496a4cf2",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a43bad4b-08f6-4db9-a6bb-13450c606383",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "782c33f5-7c39-47a5-8474-6c257d94da69",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a39299ad-dfcc-4b4e-9538-167c7ae186d7",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "CoresFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "ae361ef3-3897-4d8a-bd9e-bf550a051d14",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a76a734c-3ae9-4181-80df-b3c1ac37fea9",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b74cc983-6f31-4d8b-98d4-165fc449547f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4ebf0c15-2230-4529-87c4-3f5032073e20",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ed84819e-a91a-418c-8b0b-0b9634989fb3",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6cfc2688-29ab-42c3-98ed-492c9df8abb2",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "CoresFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "ae361ef3-3897-4d8a-bd9e-bf550a051d14",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "73a4cf64-d12a-4d4b-a344-f2585060b011",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "aef35398-7415-4d85-9d1e-5927b9fd72c6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b940ac81-1c70-4cb4-8cdf-2ddaf5621d1f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "21663346-7aea-42fb-a5bd-69bf585aa42f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "8a029346-c473-4065-91a3-86cb25de4ef6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "49bda21e-ce0a-4fbc-be7f-b9e03ea69d09",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "580521f3-d003-43fc-bfd0-bb9eb0fdae8f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7c5a9c7b-4959-497a-8854-9c6e92821bc7",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7738b8bf-1406-417e-8cff-7f0e8e07ab5c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "HistoryFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "d37a75f1-3167-409a-bc05-c894f58e5cb2",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "22e36d28-865e-4016-b873-ce08c0981b47",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7b94eb1c-0d54-430f-a6ec-5b8739e51149",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "e0073376-fb82-4efa-8242-91843ba25ab0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "8c5e3639-6cb1-4df2-92e8-3eb42d6c545d",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "165ec446-ad50-4c2d-bd6c-644c433bfc5d",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "HistoryFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "d37a75f1-3167-409a-bc05-c894f58e5cb2",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b31e727e-c49f-4fcd-9e3b-fa64273cb4c2",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "aa3b84fc-0098-475f-9597-d734e8d46f87",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "fd46a9e3-0135-4228-9a9f-ca58ce21feb8",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c1ea513b-441d-4e53-b33f-c84b4e163bee",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a62c9b46-a05c-48ca-958b-4f2a032ce926",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "18a52bbc-4d88-49c1-9acc-50456b4a7911",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ac69d303-4cc0-436c-9949-069a536f19ae",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c790c410-5b21-4c70-acfe-69a5adb2c52d",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5eb9fe82-0f0a-41cc-940b-a04fc480f7df",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "LaunchFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "1b400ffb-e555-4a5d-9f87-4664ce0d2c1c",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1175549e-e80a-4755-b17d-0bdfd870bb72",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "29193bae-5942-4c56-99dd-22b2eb2e6e87",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "46609244-5880-4b7e-ac4d-5739fbefed1a",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "57804ffe-9bd8-4d08-bd6d-37969d2fde2f",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "759e1a02-daa7-4eac-b317-e21066d9feca",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "LaunchFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "1b400ffb-e555-4a5d-9f87-4664ce0d2c1c",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "3bd6ec94-3b44-4d69-b742-04d4750e58cb",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "e73081ac-b835-4e65-8886-7e995254ae49",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "0af4268f-9157-49d2-bc50-23f1c7d12c46",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "eb40b6bf-8237-4b60-9ac8-0c8e1d03fcc5",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "87cab9a9-d785-40e4-9319-5aa38382dada",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "LaunchFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "1b400ffb-e555-4a5d-9f87-4664ce0d2c1c",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "91d6e8ad-84d5-4327-9c73-16710460ee2c",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a16e2bb4-6143-4d06-8507-3116a5e0d442",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "9e673fa6-288e-419e-9a86-7d8be216c7a5",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7e95ee0b-5dde-4e84-9185-c0a5705ac46c",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "19f18c7d-637f-4e79-8669-d4b51e5186b5",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "LaunchFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "1b400ffb-e555-4a5d-9f87-4664ce0d2c1c",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "146ec638-0c02-4d34-ba25-8d1d4bef08d1",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "636eccbe-baec-4f6d-bb8e-b1c6af04132a",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "520200c7-81f3-4f89-868f-73bb92c01c41",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d7914173-7ba3-4d64-830e-4032c8a808d6",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "166699b0-6184-4868-b67e-4b5eb4a86ec7",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "897e805c-d3cf-4147-96f6-435ce53e1375",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "66a5b6d2-62b4-4e07-9f78-7db5c5b1746c",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "f91c750a-8209-4331-b8e1-fc9e92d4e326",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "e3a80946-9df0-406a-9964-913ff3f868e9",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b2a5c104-fe42-46b4-9c6d-0a6e29da4399",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "e6444d39-f422-4077-acd2-4cec38376560",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "MissionsFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "af8597f7-7e1e-46c8-970e-f2b1ae075bd0",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "900ae37c-66b1-4801-a849-7864aec1d6eb",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "17a10ccf-51a8-4a6b-9fb9-0e654f3be6eb",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "affaa0ea-821b-4830-8f74-ee2f2f908b5d",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "MissionsFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "af8597f7-7e1e-46c8-970e-f2b1ae075bd0",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "05286e09-09a5-49e2-ae52-7efcfeb5ac79",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b11023d9-2371-4a29-a4a0-65c4645c691c",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "7aa47bba-5a09-4446-8b97-ea2628a37a01",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "73d5d622-6442-49d9-aebe-6b8746abdc9c",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "PayloadsFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "ae83fb8d-c953-481d-9254-6a82670bbc95",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c1f2d49c-dff3-46fd-8795-a379ec111aaa",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "fe4d5d64-7bdc-4520-b0e3-115c68aeba21",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "1940d203-4704-4065-acc5-dcbaad9f7e05",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "4badcbb1-0858-4ab7-8dba-23df5f1d8f38",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "e07c420f-d0ac-4728-9abd-2012192be29b",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "d4147552-2955-4c45-9faa-36152219b459",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "5afb598f-e368-49ae-b64d-1ad0ea5ff34e",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6514272b-a5d1-4744-b04e-bfb97a3ac633",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "dddfed12-9a78-4e5e-b02e-d178a76af0e0",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "013d23ba-cec5-4cfc-bc44-5273014f1bb9",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "c009eed2-3652-4794-885e-62190b846cce",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ShipsFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "cd43e169-4447-418d-9bc8-2976fe8174a6",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "a3deea40-a4ae-4cd2-8fef-ae942fccc8c1",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "6632edf4-1007-4107-9f9e-eaf4e4b1f4d2",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b29d837d-3710-4665-8893-85135f7d8ae9",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "f655cb46-066a-4d5e-9486-2f404f96f070",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "find",
        "data": {
            "type": "Argument"
        },
        "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "b7418507-9a46-4c22-b168-30b04fc12019",
        "parent": {
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ShipsFind",
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "cd43e169-4447-418d-9bc8-2976fe8174a6",
            "parent": {
                "node": {
                    "name": "",
                    "description": "",
                    "inputs": [],
                    "outputs": null,
                    "notEditable": false
                },
                "type": "input",
                "data": {
                    "type": "InputObjectTypeDefinition"
                },
                "help": "This is particularly valuable in the case of mutations, where you might want to pass in a whole object to be created. In the GraphQL schema language, input types look exactly the same as regular object types, but with the keyword input instead of type.",
                "root": true,
                "instances": [
                    {
                        "options": [
                            {
                                "name": "required",
                                "help": "Check this if this node is required for creation of the type or is required in input | interface"
                            },
                            {
                                "name": "array",
                                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                            },
                            {
                                "name": "arrayRequired",
                                "help": "Check this if you want a list here and you dont want null"
                            }
                        ],
                        "data": {
                            "type": "InputValueDefinition",
                            "for": [
                                "InputObjectTypeDefinition",
                                "FieldDefinition",
                                "DirectiveDefinition",
                                "ObjectValue"
                            ]
                        },
                        "node": {
                            "name": "",
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": false
                        },
                        "instances": [
                            {
                                "node": {
                                    "notEditable": true
                                },
                                "data": {
                                    "type": "Argument"
                                },
                                "options": [
                                    {
                                        "name": "array",
                                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "type": "InputObjectTypeExtension",
                            "for": [
                                "Extend"
                            ]
                        },
                        "node": {
                            "description": "",
                            "inputs": [],
                            "outputs": [],
                            "notEditable": true
                        },
                        "root": false
                    }
                ],
                "id": "9ecaa91d-d978-4324-bc12-e4cdb6ae33b9"
            }
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "limit",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "ea8b6947-6ea7-428f-b4e5-dbc59bf971fb",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "offset",
        "help": "Integer value like 1 or -2 or 0 or 1234",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "416a97ba-a46a-4a2d-a76c-55aabbcb9247",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "Int",
            "help": "Integer value like 1 or -2 or 0 or 1234",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "383fc094-ee5f-4921-9152-5887c7e6a8e0"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "order",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "dc9d2011-c8b8-44ba-9816-bdda62edadd9",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "sort",
        "help": "Character sequence like 'Hello' or 'person' etc.",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "84295084-fd81-4132-97f5-d12abb22ecba",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "String",
            "help": "Character sequence like 'Hello' or 'person' etc.",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "39c200ae-7a89-40a1-9a1f-375f2eb1f161"
        }
    },
    {
        "options": [
            {
                "name": "array",
                "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
            }
        ],
        "data": {
            "type": "Argument"
        },
        "node": {
            "description": "",
            "inputs": [],
            "outputs": [],
            "notEditable": true
        },
        "type": "id",
        "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
        "instances": [
            {
                "node": {
                    "notEditable": true
                },
                "data": {
                    "type": "Argument"
                },
                "options": [
                    {
                        "name": "array",
                        "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                    }
                ]
            }
        ],
        "id": "fb3db724-9fc4-43c4-9eaf-c17e82414900",
        "parent": {
            "options": [
                {
                    "name": "required",
                    "help": "Check this if this node is required for creation of the type or is required in input | interface"
                },
                {
                    "name": "array",
                    "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                },
                {
                    "name": "arrayRequired",
                    "help": "Check this if you want a list here and you dont want null"
                }
            ],
            "data": {
                "type": "InputValueDefinition",
                "for": [
                    "InputObjectTypeDefinition",
                    "FieldDefinition",
                    "DirectiveDefinition",
                    "ObjectValue"
                ]
            },
            "node": {
                "name": "",
                "description": "",
                "inputs": [],
                "outputs": [],
                "notEditable": false
            },
            "type": "ID",
            "help": "The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable",
            "instances": [
                {
                    "node": {
                        "notEditable": true
                    },
                    "data": {
                        "type": "Argument"
                    },
                    "options": [
                        {
                            "name": "array",
                            "help": "Check this if you want a list here for example 'Hello' is a String however ['Hello', 'Me', 'World', 'Sloth'] its an array of strings"
                        }
                    ]
                }
            ],
            "id": "2ad9aefb-5881-43f7-aa09-501a265318f7"
        }
    }
]